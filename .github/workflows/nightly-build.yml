name: Nightly Build

on:
  # schedule:
  #   - cron: "0 7 * * *"  # Every day at 7 AM UTC
  workflow_dispatch:  # manual trigger

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{secrets.AWS_SESSION_TOKEN}}
      AWS_REGION: us-east-1

    steps:
      - name: Checkout Infra Repo
        uses: actions/checkout@v4

      - name: Checkout Source Repo
        uses: actions/checkout@v4
        with:
          repository: devenvaruv/devenops
          ref: main
          path: devenops-source

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{env.AWS_SESSION_TOKEN}}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to ECR
        run: |
          aws ecr get-login-password | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      
      - name: Create frontend repo if not exists
        run: |
          aws ecr describe-repositories --repository-names "frontend" || \
          aws ecr create-repository --repository-name "frontend"
    
      - name: Create auth-service repo if not exists
        run: |
          aws ecr describe-repositories --repository-names "auth-service" || \
          aws ecr create-repository --repository-name "auth-service"

      - name: Build and Push Images
        run: |
          bash scripts/build_push_images.sh
      
      - name: Install kubectl
        run: |
          KUBECTL_VERSION=$(curl -sL https://dl.k8s.io/release/stable.txt)
          echo "Fetched KUBECTL_VERSION=$KUBECTL_VERSION"
          curl -LO https://dl.k8s.io/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/
          kubectl version --client

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --region $AWS_REGION --name EKS-Cluster
        
      - name: Creates Namespace
        run: |
          bash scripts/create_namespace.sh nightly
      
      - name: Deploy services to EKS
        run: |
          bash scripts/deploy_services.sh nightly

      # - name: Test Deployment
      #   run: |
      #     bash scripts/test_deployment.sh nightly frontend-service
      
      - name: Promote Nightly Images to QA
        run: |
          bash scripts/promote_batch.sh nightly qa

      # - name: Promote Nightly Images to production
      #   run: |
      #     bash scripts/promote_production.sh nightly

      - name: Cleanup Nightly Namespace
        run: |
          bash scripts/clean_up.sh nightly
